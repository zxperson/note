首先：键盘上的 enter 键，全名叫：“回车换行”

“回车” 和 “换行” 最早出现在打字机上。在打字机上：
    "回车"也就是 \r ,  意思是  告诉打字机把打印头定位在左边界（回到 行首）；
    "换行"也就是 \n ,  意思是  告诉打字机把纸向下移一行（光标到 下一行）

在编程语言当中：

    在 C 语言中，以及 C++ 、java 、python 等等C语言的 高层语言中：\n 代表 “回车换行”

    代码中的 \n (注意 这里说的是代码中的,不是普通文本)，会按照 操作系统的不同，自动转化：
        linux系统：    还是 \n
        windows系统：  转换为 \r\n

    所以 在 代码中，我们直接使用 \n 或者 \r\n 作为 '回车和换行'，例如：
        print("aaa\nbbb")
        print("aaa\r\nbbb")
    以上代码 在 windows和 linux系统中 效果是一样的。但是 通常我们 使用 \n 多一点。毕竟大家都懒。。。


    在代码中的 \r 代表 光标回行首：
        print("aaa\rbbbbb")
    在windows和 linux中执行，终端中 只会 输出 bbbbb, aaa被覆盖了。这个 \r 很少会单独使用。


在文本文件中：不同系统的“回车换行” 不会 相互转换了。
    windows系统中：\r\n 作为 “回车换行”
    linux系统中：\n 作为 ”回车换行“

    例如： 你在 liunx系统下的文本文件，放到 windows 用 记事本打开，所有字符 都在一行。
    为啥 Python代码 就不会有这个问题呢？ 那是因为 编辑器软件 自动给 转换了。。。